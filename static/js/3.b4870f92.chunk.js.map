{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","s","dialogList","avatar","src","userName","to","name","Message","messageBlock","userBlock","message","maxLength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","Textarea","required","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","newMessageBody","isAuth","dialogsBlock","dialogsItems","values","sendMessage","mapStateToPropsForRedirect","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React"],"mappings":"uHACAA,EAAOC,QAAU,CAAC,aAAe,8BAA8B,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,4B,oBCAxJD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,OAAS,2BAA2B,SAAW,+B,oBCA7GD,EAAOC,QAAU,CAAC,SAAW,0BAA0B,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,UAAY,2BAA2B,QAAU,2B,+GCkB5MC,EAfI,SAACC,GAClB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OACE,sBAAKC,UAAWC,IAAEC,WAAlB,UACE,qBAAKF,UAAWC,IAAEE,OAAlB,SACE,qBAAKC,IAAI,4EAEX,qBAAKJ,UAAWC,IAAEI,SAAlB,SACE,cAAC,IAAD,CAASC,GAAIR,EAAb,SAAoBD,EAAMU,a,kBCSnBC,EAnBC,SAACX,GACf,OACE,8BACE,sBAAKG,UAAWC,IAAEQ,aAAlB,UACE,sBAAKT,UAAWC,IAAES,UAAlB,UACE,qBAAKV,UAAWC,IAAEE,OAAlB,SACE,qBAAKC,IAAI,4EAEX,qBAAKJ,UAAWC,IAAEI,SAAlB,SACE,4BAAIR,EAAMU,YAId,qBAAKP,UAAWC,IAAEU,QAAlB,SAA4Bd,EAAMc,gB,iDCRpCC,EAAcC,YAAiB,IAqBtBC,cAAU,CAAEC,KAAM,2BAAlBD,EAnBQ,SAACjB,GAAW,IAAD,EAChC,OACE,uBAAMmB,SAAUnB,EAAMoB,aAAtB,UACE,8BACE,cAACC,EAAA,GAAD,GACEC,YAAY,qBACZZ,KAAK,iBACLa,UAAWC,KAHb,4BAIc,sBAJd,yBAKY,CAACC,IAAUV,IALvB,MAQF,8BACE,kDCaOW,EA7BC,SAAC1B,GACf,IAAI2B,EAAQ3B,EAAM4B,YACdC,EAAkBF,EAAMG,QAAQC,KAAI,SAACC,GAAD,OACtC,cAAC,EAAD,CAAYtB,KAAMsB,EAAEtB,KAAiBR,GAAI8B,EAAE9B,IAAZ8B,EAAE9B,OAE/B+B,EAAmBN,EAAMO,SAASH,KAAI,SAACI,GAAD,OACxC,cAAC,EAAD,CAASrB,QAASqB,EAAErB,SAAcqB,EAAEjC,OAGjByB,EAAMS,eAK3B,OAAKpC,EAAMqC,OAGT,sBAAKlC,UAAWC,IAAEkC,aAAlB,UACE,qBAAKnC,UAAWC,IAAEmC,aAAlB,SAAiCV,IACjC,sBAAK1B,UAAWC,IAAE8B,SAAlB,UACE,8BAAMD,IACN,8BACE,cAAC,EAAD,CAAgBd,SAZJ,SAACqB,GACnBxC,EAAMyC,YAAYD,EAAOJ,2BAGD,cAAC,IAAD,CAAU3B,GAAI,Y,wDCjBtCiC,EAA6B,SAACf,GAAD,MAAY,CAC3CU,OAAQV,EAAMgB,KAAKN,S,OCgBNO,sBACbC,aAfoB,SAAClB,GACrB,MAAO,CACLC,YAAaD,EAAMC,gBAIE,SAACkB,GACxB,MAAO,CACLL,YAAa,SAACL,GACZU,EAASC,YAAmBX,UDRF,SAACY,GAAe,IACxCC,EADuC,4JAE3C,WACE,OAAKC,KAAKlD,MAAMqC,OAET,cAACW,EAAD,eAAeE,KAAKlD,QAFI,cAAC,IAAD,CAAUS,GAAG,eAHH,GACb0C,IAAMH,WAYtC,OAJqCH,YAAQH,EAARG,CACnCI,KCGWL,CAGblB","file":"static/js/3.b4870f92.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsBlock\":\"Dialogs_dialogsBlock__1W6SK\",\"dialogsItems\":\"Dialogs_dialogsItems__Jd-f9\",\"active\":\"Dialogs_active__14JgY\",\"messages\":\"Dialogs_messages__1nFd4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogList\":\"DialogItem_dialogList__2jTc5\",\"avatar\":\"DialogItem_avatar__pkW0t\",\"userName\":\"DialogItem_userName__22uyw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Message_messages__3644b\",\"messageBlock\":\"Message_messageBlock__2s0_n\",\"avatar\":\"Message_avatar__W08xD\",\"userName\":\"Message_userName__Ius0B\",\"userBlock\":\"Message_userBlock__1GN-P\",\"message\":\"Message_message__1SCOA\"};","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport s from './DialogItem.module.css'\r\n\r\nconst DialogItem = (props) => {\r\n  let path = '/dialogs/' + props.id\r\n\r\n  return (\r\n    <div className={s.dialogList}>\r\n      <div className={s.avatar}>\r\n        <img src=\"https://whatsism.com/uploads/posts/2018-07/1530546590_tx962vdsiqi.jpg\" />\r\n      </div>\r\n      <div className={s.userName}>\r\n        <NavLink to={path}>{props.name}</NavLink>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DialogItem\r\n","import React from 'react'\r\nimport s from './Message.module.css'\r\n\r\nconst Message = (props) => {\r\n  return (\r\n    <div>\r\n      <div className={s.messageBlock}>\r\n        <div className={s.userBlock}>\r\n          <div className={s.avatar}>\r\n            <img src=\"https://whatsism.com/uploads/posts/2018-07/1530546590_tx962vdsiqi.jpg\" />\r\n          </div>\r\n          <div className={s.userName}>\r\n            <a>{props.name}</a>\r\n          </div>\r\n        </div>\r\n\r\n        <div className={s.message}>{props.message}</div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport {\r\n  maxLengthCreator,\r\n  required,\r\n} from '../../../utils/validators/validators'\r\nimport { Textarea } from '../../common/FormControls/FormsControls'\r\n\r\nconst maxLength50 = maxLengthCreator(50)\r\n\r\nconst AddMessageForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          placeholder=\"Enter your message\"\r\n          name=\"newMessageBody\"\r\n          component={Textarea}\r\n          placeholder=\"Enter your message\"\r\n          validate={[required, maxLength50]}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button>Send</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default reduxForm({ form: 'dialog-add-message-form' })(AddMessageForm)\r\n","import React from 'react'\r\nimport s from './Dialogs.module.css'\r\nimport DialogItem from './DialogItem/DialogItem'\r\nimport Message from './Message/Message'\r\nimport { Redirect } from 'react-router-dom'\r\nimport AddMessageForm from './AddMessageForm/AddMessageForm'\r\n\r\nconst Dialogs = (props) => {\r\n  let state = props.dialogsPage\r\n  let dialogsElements = state.dialogs.map((d) => (\r\n    <DialogItem name={d.name} key={d.id} id={d.id} />\r\n  ))\r\n  let messagesElements = state.messages.map((m) => (\r\n    <Message message={m.message} key={m.id} />\r\n  ))\r\n\r\n  let newMessageBody = state.newMessageBody\r\n  let addNewMessage = (values) => {\r\n    props.sendMessage(values.newMessageBody)\r\n  }\r\n\r\n  if (!props.isAuth) return <Redirect to={'/login'} />\r\n\r\n  return (\r\n    <div className={s.dialogsBlock}>\r\n      <div className={s.dialogsItems}>{dialogsElements}</div>\r\n      <div className={s.messages}>\r\n        <div>{messagesElements}</div>\r\n        <div>\r\n          <AddMessageForm onSubmit={addNewMessage} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dialogs\r\n","import React from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Redirect to=\"/login\" />\r\n\r\n      return <Component {...this.props} />\r\n    }\r\n  }\r\n\r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(\r\n    RedirectComponent\r\n  )\r\n\r\n  return ConnectedAuthRedirectComponent\r\n}\r\n","import React from 'react'\r\nimport Dialogs from './Dialogs'\r\nimport { sendMessageCreator } from '../../redux/dialogs-reduser'\r\nimport { connect } from 'react-redux'\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect'\r\nimport { compose } from 'redux'\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage,\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMessage: (newMessageBody) => {\r\n      dispatch(sendMessageCreator(newMessageBody))\r\n    },\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs)\r\n"],"sourceRoot":""}